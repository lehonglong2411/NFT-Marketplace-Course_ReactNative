{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, DefaultTheme, StackActions } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport Home from \"./screens/Home\";\nimport Details from \"./screens/Details\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"transparent\"\n  })\n});\n\nvar App = function App() {\n  var _useFonts = useFonts({\n    InterBold: require(\"./assets/fonts/Inter-Bold.ttf\"),\n    InterSemiBold: require(\"./assets/fonts/Inter-SemiBold.ttf\"),\n    InterMedium: require(\"./assets/fonts/Inter-Medium.ttf\"),\n    InterRegular: require(\"./assets/fonts/Inter-Regular.ttf\"),\n    InterLight: require(\"./assets/fonts/Inter-Light.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) return null;\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: Details\n      })]\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"names":["createStackNavigator","NavigationContainer","DefaultTheme","StackActions","useFonts","Home","Details","Stack","theme","colors","background","App","InterBold","require","InterSemiBold","InterMedium","InterRegular","InterLight","loaded","headerShown"],"sources":["C:/Users/Admin/Desktop/React Natice Course/Second Practice/myProject/App.js"],"sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer, DefaultTheme, StackActions } from '@react-navigation/native'; \r\nimport { useFonts } from 'expo-font';\r\nimport Home from './screens/Home';\r\nimport Details from './screens/Details';\r\nconst Stack = createStackNavigator();\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    background: \"transparent\"\r\n  }\r\n}\r\n\r\nconst App =() => {\r\n  const [loaded] = useFonts({\r\n    InterBold: require(\"./assets/fonts/Inter-Bold.ttf\"),\r\n    InterSemiBold: require(\"./assets/fonts/Inter-SemiBold.ttf\"),\r\n    InterMedium: require(\"./assets/fonts/Inter-Medium.ttf\"),\r\n    InterRegular: require(\"./assets/fonts/Inter-Regular.ttf\"),\r\n    InterLight: require(\"./assets/fonts/Inter-Light.ttf\"),\r\n  });\r\n  if(!loaded) return null;\r\n  return (\r\n    <NavigationContainer theme={theme}>\r\n      <Stack.Navigator screenOptions={{ headerShown: false}} initialRouteName=\"Home\">\r\n        <Stack.Screen name= \"Home\" component={Home} />\r\n\r\n        <Stack.Screen name=\"Details\" component={Details} />\r\n      </Stack.Navigator>\r\n    </ NavigationContainer>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;;;;;AAAA,SAASA,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,EAA8BC,YAA9B,EAA4CC,YAA5C,QAAgE,0BAAhE;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;;;AACA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AACA,IAAMQ,KAAK,mCACNN,YADM;EAETO,MAAM,kCACDP,YAAY,CAACO,MADZ;IAEJC,UAAU,EAAE;EAFR;AAFG,EAAX;;AAQA,IAAMC,GAAG,GAAE,SAALA,GAAK,GAAM;EACf,gBAAiBP,QAAQ,CAAC;IACxBQ,SAAS,EAAEC,OAAO,iCADM;IAExBC,aAAa,EAAED,OAAO,qCAFE;IAGxBE,WAAW,EAAEF,OAAO,mCAHI;IAIxBG,YAAY,EAAEH,OAAO,oCAJG;IAKxBI,UAAU,EAAEJ,OAAO;EALK,CAAD,CAAzB;EAAA;EAAA,IAAOK,MAAP;;EAOA,IAAG,CAACA,MAAJ,EAAY,OAAO,IAAP;EACZ,OACE,KAAC,mBAAD;IAAqB,KAAK,EAAEV,KAA5B;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAiB,aAAa,EAAE;QAAEW,WAAW,EAAE;MAAf,CAAhC;MAAuD,gBAAgB,EAAC,MAAxE;MAAA,WACE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAE,MAApB;QAA2B,SAAS,EAAEd;MAAtC,EADF,EAGE,KAAC,KAAD,CAAO,MAAP;QAAc,IAAI,EAAC,SAAnB;QAA6B,SAAS,EAAEC;MAAxC,EAHF;IAAA;EADF,EADF;AAUD,CAnBD;;AAqBA,eAAeK,GAAf"},"metadata":{},"sourceType":"module"}